{"changed":true,"filter":false,"title":"categories_controller_spec.rb","tooltip":"/spec/controllers/admin/categories_controller_spec.rb","value":"require 'spec_helper'\n\ndescribe Admin::CategoriesController do\n  render_views\n\n  before(:each) do\n    Factory(:blog)\n    #TODO Delete after removing fixtures\n    Profile.delete_all\n    henri = Factory(:user, :login => 'henri', :profile => Factory(:profile_admin, :label => Profile::ADMIN))\n    request.session = { :user => henri.id }\n  end\n\n  it \"test_index\" do\n    get :index\n    assert_response :redirect, :action => 'index'\n  end\n  \n  describe \"test_new\" do\n    before(:each) do\n      get :edit, :id => Factory(:category).id\n    end\n\n    it 'should render template new' do\n      assert_template 'new'\n      assert_tag :tag => \"table\",\n        :attributes => { :id => \"category_container\" }\n    end\n\n    it 'should have valid category' do\n      assigns(:category).should_not be_nil\n      assert assigns(:category).valid?\n      assigns(:categories).should_not be_nil\n    end\n  end\n\n  describe \"test_edit\" do\n    before(:each) do\n      get :edit, :id => Factory(:category).id\n    end\n\n    it 'should render template new' do\n      assert_template 'new'\n      assert_tag :tag => \"table\",\n        :attributes => { :id => \"category_container\" }\n    end\n\n    it 'should have valid category' do\n      assigns(:category).should_not be_nil\n      assert assigns(:category).valid?\n      assigns(:categories).should_not be_nil\n    end\n  end\n\n  it \"test_update\" do\n    post :edit, :id => Factory(:category).id\n    assert_response :redirect, :action => 'index'\n  end\n\n  describe \"test_destroy with GET\" do\n    before(:each) do\n      test_id = Factory(:category).id\n      assert_not_nil Category.find(test_id)\n      get :destroy, :id => test_id\n    end\n\n    it 'should render destroy template' do\n      assert_response :success\n      assert_template 'destroy'      \n    end\n  end\n\n  it \"test_destroy with POST\" do\n    test_id = Factory(:category).id\n    assert_not_nil Category.find(test_id)\n    get :destroy, :id => test_id\n\n    post :destroy, :id => test_id\n    assert_response :redirect, :action => 'index'\n\n    assert_raise(ActiveRecord::RecordNotFound) { Category.find(test_id) }\n  end\n  \nend\n","undoManager":{"mark":-2,"position":21,"stack":[[{"start":{"row":18,"column":18},"end":{"row":18,"column":21},"action":"remove","lines":["dit"],"id":2}],[{"start":{"row":18,"column":17},"end":{"row":18,"column":18},"action":"remove","lines":["e"],"id":3}],[{"start":{"row":18,"column":17},"end":{"row":18,"column":18},"action":"insert","lines":["b"],"id":4}],[{"start":{"row":18,"column":18},"end":{"row":18,"column":19},"action":"insert","lines":["e"],"id":5}],[{"start":{"row":18,"column":19},"end":{"row":18,"column":20},"action":"insert","lines":["w"],"id":6}],[{"start":{"row":18,"column":19},"end":{"row":18,"column":20},"action":"remove","lines":["w"],"id":7}],[{"start":{"row":18,"column":18},"end":{"row":18,"column":19},"action":"remove","lines":["e"],"id":8}],[{"start":{"row":18,"column":17},"end":{"row":18,"column":18},"action":"remove","lines":["b"],"id":9}],[{"start":{"row":18,"column":17},"end":{"row":18,"column":18},"action":"insert","lines":["n"],"id":10}],[{"start":{"row":18,"column":18},"end":{"row":18,"column":19},"action":"insert","lines":["e"],"id":11}],[{"start":{"row":18,"column":19},"end":{"row":18,"column":20},"action":"insert","lines":["w"],"id":12}],[{"start":{"row":18,"column":17},"end":{"row":18,"column":20},"action":"remove","lines":["new"],"id":13},{"start":{"row":18,"column":17},"end":{"row":18,"column":18},"action":"insert","lines":["e"]}],[{"start":{"row":18,"column":18},"end":{"row":18,"column":19},"action":"insert","lines":["d"],"id":14}],[{"start":{"row":18,"column":19},"end":{"row":18,"column":20},"action":"insert","lines":["i"],"id":15}],[{"start":{"row":18,"column":20},"end":{"row":18,"column":21},"action":"insert","lines":["t"],"id":16}],[{"start":{"row":17,"column":0},"end":{"row":34,"column":0},"action":"insert","lines":["  describe \"test_edit\" do","    before(:each) do","      get :edit, :id => Factory(:category).id","    end","","    it 'should render template new' do","      assert_template 'new'","      assert_tag :tag => \"table\",","        :attributes => { :id => \"category_container\" }","    end","","    it 'should have valid category' do","      assigns(:category).should_not be_nil","      assert assigns(:category).valid?","      assigns(:categories).should_not be_nil","    end","  end",""],"id":17}],[{"start":{"row":16,"column":5},"end":{"row":17,"column":0},"action":"insert","lines":["",""],"id":18},{"start":{"row":17,"column":0},"end":{"row":17,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":18,"column":18},"end":{"row":18,"column":21},"action":"remove","lines":["dit"],"id":19}],[{"start":{"row":18,"column":17},"end":{"row":18,"column":18},"action":"remove","lines":["e"],"id":20}],[{"start":{"row":18,"column":17},"end":{"row":18,"column":18},"action":"insert","lines":["n"],"id":21}],[{"start":{"row":18,"column":18},"end":{"row":18,"column":19},"action":"insert","lines":["e"],"id":22}],[{"start":{"row":18,"column":19},"end":{"row":18,"column":20},"action":"insert","lines":["w"],"id":23}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":15,"column":22},"end":{"row":15,"column":22},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1507940227242}